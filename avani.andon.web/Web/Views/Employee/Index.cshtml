@model List<avSVAW.Models.EmployeeForm>
@{
    var session = (Model.DataModel.tblUser)Session[Common.GlobalConstants.USER_SESSION];
}

<h3 style="margin-top: -10px;">@Resources.Language.List @Resources.Language.Employee</h3>
<div class="row">
    <div class="col-xs-12">
        <div id="abc4"></div>
        <div class="box">
            <div class="box-header">
                <div>
                    <a href="@Url.Action("Create")" class="btn btn-success">
                        <i class="fa fa-plus-circle"></i>&nbsp; @Resources.Language.Create &nbsp;
                    </a>
                </div>

            </div>
            <div class="box-body">
                <table id="ProductTable" class="table table-bordered table-striped">
                    <thead>
                        <tr>
                            <th>#</th>
                            <th>Mã nhân viên</th>
                            <th>Tên nhân viên</th>
                            <th>Hộp thư</th>
                            <th>Số điện thoại</th>
                            <th>Mã số thẻ</th>
                            <th>Bộ phận</th>
                            <th>Tình trạng</th>
                            <th style="width: 15%">@Resources.Language.Action</th>
                        </tr>
                    </thead>
                    @if (Model.Count > 0)
                    {
                        var i = 1;
                        <tbody id="tbodyid">
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>@i</td>
                                    <td>@item.Code</td>
                                    <td>@item.Name</td>
                                    <td>@item.Email</td>
                                    <td>@item.Phone</td>
                                    <td>@item.CardId</td>
                                    <td>@item.DepartName</td>
                                    <td>@item.ActiveName</td>
                                    <td>
                                        <a href="/Employee/Edit/@item.Id"class="btn btn-primary  btn-xs"><i class="fa fa-pencil"></i> @Resources.Language.Edit </a>
                                        @if (Common.UserFunction.USER_ADMIN(session.Role))
                                        {
                                            <a href="/Employee/Delete/@item.Id" class="btn btn-danger btn-xs" onclick="return confirm('@Resources.Language.DeleteConfirm');"><i class="fa fa-trash-o"></i> Xóa </a>
                                        }

                                    </td>
                                </tr>
                                i = i + 1;
                            }
                        </tbody>
                    }

                </table>
            </div>
        </div>

    </div>
</div>
@section Scripts {

    <script>
       @* $(document).ready(function () {
            $('#ProductTable').DataTable({
                'paging': false,
                'lengthChange': true,
                'searching': true,
                'ordering': true,
                'info': false,
                'autoWidth': false
            })
            $("#modalImport").click(function () {
                $("#importcsv").modal('show');
            });
            var jsonRabbit = JSON.parse(@Html.Raw(@ViewBag.MessageRabbit));
            var text = '<tr>' +
                '<td style="text-align:center;"></td>' +
                '<td style="text-align:center;">Code</td>' +
                '<td style="text-align:center;">Name</td>' +
                '<td style="text-align:center;">Email</td>' +
                '<td style="text-align:center;">Phone</td>' +
                '<td style="text-align:center;">' + jsonRabbit.cardId + '</td>' +
                '<td style="text-align:center;">DepartName</td>' +
                '<td style="text-align:center;">Status</td>'
                + '</tr>';
            $('#tbodyid').append(text);*@



            //Receive message from rabbitmq
            @*sendMess = function () {}
            var wsbroker = location.hostname;
            console.log(wsbroker);
            var client = new Paho.MQTT.Client(location.hostname, 15675,"/ws","id");

            client.onConnectionLost = onConnectionLost;
            client.onMessageArrived = onMessageArrived;*@

            @*function (message) {
                //debug("RECEIVE ON " + message.destinationName + " PAYLOAD " + message.payloadString);
                console.log("RECEIVE ON " + message.destinationName + " PAYLOAD " + message.payloadString)

                var p = JSON.parse(message.payloadString);
                console.log(p);
            };*@
            @*var options = {
                timeout: 3,
                keepAliveInterval: 30,
                onSuccess: function () {
                    //debug("CONNECTION SUCCESS");
                    client.subscribe("bunny", { qos: 1 });
                    console.log("CONNECTION SUCCESS");

                },
                onFailure: function (message) {
                    //debug("CONNECTION FAILURE - " + message.errorMessage);
                    console.log("CONNECTION FAILURE - " + message.errorMessage);
                }
            };*@
         //   client.connect({
         //       timeout: 3,
         //       keepAliveInterval: 10,
        //        onSuccess: onConnect
        //    });
          //  function onConnect() {
            //    console.log("onConnect");
            //    client.subscribe("/", {qos:2});
            //    message = new Paho.MQTT.Message("Hello World ???");
            //    message.destinationName = "/";
           //     client.send(message);
         //       console.log(message);
          //  };
          //  function onConnectionLost(responseObject) {
           //     if (responseObject.errorCode !== 0)
           //         console.log("onConnectionLost:" + responseObject.errorMessage);
          //  };
           // function onMessageArrived(message) {
            //    console.log("onMessageArrived:" + message.payloadString);
             //   console.log(Date.now());
                @*client.disconnect();*@
            //};
            //debug("CONNECT TO " + wsbroker + ":" + wsport);
            //console.log(1212);
            //client.connect(options);
            //console.log(4455);
            //var d = "hello 129019203"
            //sendMess(d);
            //sendMess = (data)=> {
            //    message = new Paho.MQTT.Message(data);
            //    message.destinationName = "bunny";
            //    //debug("SEND ON " + message.destinationName + " PAYLOAD " + data);
            //    client.send(message);
            //    console.log(message);
            //};
@*
        });*@

    </script>
    <script type="text/javascript">
        $(document).ready(function () {

            $('#ProductTable').DataTable({
                'paging': false,
                'lengthChange': true,
                'searching': true,
                'ordering': true,
                'info': false,
                'autoWidth': false
            })

            $("#modalImport").click(function () {
                $("#importcsv").modal('show');
            });
        });
    </script>
}


