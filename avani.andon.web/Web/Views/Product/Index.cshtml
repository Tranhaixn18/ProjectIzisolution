@model PagedList.IPagedList<Model.DataModel.tblProduct>
@using PagedList.Mvc;
@using PagedList;


@{
    ViewBag.Title = Resources.Language.Product;
    //ViewBag.SubTitle = Resources.Language.List + " " + Resources.Language.Product;
}
@section header{
    @ViewBag.SubTitle
}

<h3 style="margin-top: -10px;">@Resources.Language.List @Resources.Language.Product</h3>
<div class="row">
    <div class="col-xs-12">

        <div class="box">
            <div class="box-header">

            </div>
            <div class="box-body">
                <table id="ProductTable" class="table table-bordered table-striped">
                    <thead>
                        <tr>
                            <th>#</th>
                            <th>@Resources.Language.Code</th>
                            <th>@Resources.Language.Name</th>
                            <th>@Resources.Language.Speed</th>
                            <th>@Resources.Language.Quantity</th>
                            <th>@Resources.Language.Description</th>

                        </tr>
                    </thead>
                    @if (Model.Count > 0)
                    {
                        var i = 1;
                        <tbody>
                            @foreach (var f in Model)
                            {
                                <tr>
                                    <td>
                                        @i
                                    </td>
                                    <td>@f.Code</td>
                                    <td>
                                        @f.Name
                                    </td>
                                    <td>
                                        @if (f.Speed > 0)
                                        {
                                            @Html.Raw(Convert.ToInt32(f.Speed).ToString("#,##0").Replace(".", ","))
                                        }
                                        else
                                        {
                                            @Html.Raw("0")
                                        }
                                    </td>
                                    <td>
                                        @if (f.Quantity > 0)
                                        {
                                            @Html.Raw(Convert.ToInt32(f.Quantity).ToString("#,##0").Replace(".", ","))
                                        }
                                        else
                                        {
                                            @Html.Raw("0")
                                        }
                                    </td>
                                    <td>@f.Description </td>

                                </tr>
                                i = i + 1;
                            }
                        </tbody>
                    }

                </table>
                @Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new { page }) @*new PagedListRenderOptions
           {
               //DisplayLinkToIndividualPages = true,
               //DisplayPageCountAndCurrentLocation = false,
               //MaximumPageNumbersToDisplay = 10,
               //LiElementClasses = new string[] { "page-item" },
               //PageClasses = new string[] { "page-link" },
               ClassToApplyToFirstListItemInPager = null,
                    ClassToApplyToLastListItemInPager = null,
                    ContainerDivClasses = new[] { "pagination-container" },
                    UlElementClasses = new[] { "pagination" },
                    LiElementClasses = Enumerable.Empty<string>(),
                }*@)
            </div>
          
        </div>

    </div>
</div>
<div class="modal fade" id="importcsv" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title" id="exampleModalLabel">@Resources.Language.Import</h3>
                <button type="button" class="close" style="margin-top:-32px;" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            @using (Html.BeginForm("Importexcel1", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                <div class="modal-body">
                    <div class="form-group">
                        <div class="col-md-12"> <b>@Resources.Language.ExportExcel</b></div>
                        <div class="clearfix"></div>
                        <div class="col-md-12">
                            <input type="file" name="FileUpload1" />
                        </div>
                    </div>
                    <div class="clearfix"></div>
                </div>
                <div class="modal-footer">
                    <button type="submit" id="save-reason" class="btn btn-primary">@Resources.Language.Save</button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">@Resources.Language.Back</button>

                </div>
            }
        </div>
    </div>
</div>
@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            $('#ProductTable').DataTable({
                'paging': false,
                'lengthChange': true,
                'searching': true,
                'ordering': true,
                'info': false,
                'autoWidth': false
            })
            $("#modalImport").click(function () {
                $("#importcsv").modal('show');
            });
        });
    </script>
}
